"""
Django settings for tribunal_liga_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url # Necesario para parsear la URL de la base de datos

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Se recomienda cargar SECRET_KEY desde una variable de entorno en producción.
# Render generará una si usas 'generateValue: true' en render.yaml.
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-tivt!so00)cj*x4s)ys3on*lnltp&hjf1)mshbadqi7gr30m)9')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'True') == 'True' # Corrección: DDEBUG -> DEBUG

# Si DEBUG es False, entonces ALLOWED_HOSTS debe ser configurado.
ALLOWED_HOSTS = ['localhost', '127.0.0.1']
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gestion_liga', # Tu aplicación personalizada
    'rest_framework', # Django REST framework
    'corsheaders', # Para gestionar CORS
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Debe ir lo más arriba posible
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tribunal_liga_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug', # Añadido por defecto de Django 5.x
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tribunal_liga_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuración principal de la base de datos.
# Usa dj_database_url para parsear la URL de la base de datos.
# En Render, DATABASE_URL será provista por la integración con PostgreSQL.
# Localmente, si DATABASE_URL no está definida, usará SQLite.
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'sqlite:///db.sqlite3'),
        conn_max_age=600 # Opcional: Reconexión de DB para evitar conexiones cerradas
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
# STATIC_ROOT es el directorio donde 'collectstatic' recolectará los archivos estáticos para producción.
# Render necesita esto para servir los archivos estáticos.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATICFILES_DIRS es para directorios adicionales de archivos estáticos que no están en las apps.
# Generalmente se usa si tienes una carpeta 'static' en la raíz de tu proyecto.
# Si no la usas, puedes comentarla o eliminarla.
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de CORS para permitir solicitudes desde el frontend
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",   # Tu frontend de React en desarrollo
    "http://127.0.0.1:3000",
    # Agrega aquí la URL de tu frontend de Render (si tienes uno)
    # Ejemplo: "https://tu-frontend-en-render.onrender.com",
]

# Si necesitas permitir más orígenes, añádelos a la lista.
# Para producción, NUNCA uses CORS_ALLOW_ALL_ORIGINS = True
# CORS_ALLOW_ALL_ORIGINS = True # Solo para desarrollo, NO para producción.
# Esto es una prueba de actualizacion